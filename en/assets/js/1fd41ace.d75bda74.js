"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1075],{12891:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p}});var r=n(83117),s=n(80102),a=(n(67294),n(3905)),o=["components"],l={id:"geekos-project-2",slug:"/geekos-project-2",title:"geekos project 2",author:"RiverMountain",date:"2023/04/27",tags:["OS"],keywords:["OS","geekos"],description:"\u6269\u5145GeekOS\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u652f\u6301\u7528\u6237\u7ea7\u8fdb\u7a0b\u7684\u52a8\u6001\u521b\u5efa\u548c\u6267\u884c\u3002",last_update:{date:"2023/04/27"}},c=void 0,i={unversionedId:"course/OS/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/geekos-project-2",id:"course/OS/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/geekos-project-2",title:"geekos project 2",description:"\u6269\u5145GeekOS\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u652f\u6301\u7528\u6237\u7ea7\u8fdb\u7a0b\u7684\u52a8\u6001\u521b\u5efa\u548c\u6267\u884c\u3002",source:"@site/docs/course/OS/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/geekos project 2.md",sourceDirName:"course/OS/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe",slug:"/geekos-project-2",permalink:"/en/docs/geekos-project-2",draft:!1,tags:[{label:"OS",permalink:"/en/docs/tags/os"}],version:"current",frontMatter:{id:"geekos-project-2",slug:"/geekos-project-2",title:"geekos project 2",author:"RiverMountain",date:"2023/04/27",tags:["OS"],keywords:["OS","geekos"],description:"\u6269\u5145GeekOS\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u652f\u6301\u7528\u6237\u7ea7\u8fdb\u7a0b\u7684\u52a8\u6001\u521b\u5efa\u548c\u6267\u884c\u3002",last_update:{date:"2023/04/27"}},sidebar:"course",previous:{title:"geekos project 1",permalink:"/en/docs/geekos-project-1"},next:{title:"geekos project 3",permalink:"/en/docs/geekos-project-3"}},u={},p=[{value:"GeekOS\u8fdb\u7a0b\u72b6\u6001\u53ca\u8f6c\u6362",id:"geekos\u8fdb\u7a0b\u72b6\u6001\u53ca\u8f6c\u6362",level:2},{value:"GeekOS\u7684\u7528\u6237\u6001\u8fdb\u7a0b",id:"geekos\u7684\u7528\u6237\u6001\u8fdb\u7a0b",level:2},{value:"User_Context\u7ed3\u6784\u7ed3\u6784",id:"user_context\u7ed3\u6784\u7ed3\u6784",level:2},{value:"\u7528\u6237\u6001\u8fdb\u7a0b\u7a7a\u95f4",id:"\u7528\u6237\u6001\u8fdb\u7a0b\u7a7a\u95f4",level:2},{value:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efaLDT\u7684\u6b65\u9aa4",id:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efaldt\u7684\u6b65\u9aa4",level:3},{value:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efa\u6d41\u7a0b",id:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efa\u6d41\u7a0b",level:2},{value:"\u9879\u76ee\u5b9e\u73b0",id:"\u9879\u76ee\u5b9e\u73b0",level:2},{value:"\u8bfe\u540e\u4f5c\u4e1a",id:"\u8bfe\u540e\u4f5c\u4e1a",level:2},{value:"\u53c2\u8003\u4e0e\u81f4\u8c22",id:"\u53c2\u8003\u4e0e\u81f4\u8c22",level:2}],_={toc:p},d="wrapper";function m(e){var t=e.components,l=(0,s.Z)(e,o);return(0,a.kt)(d,(0,r.Z)({},_,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"geekos\u8fdb\u7a0b\u72b6\u6001\u53ca\u8f6c\u6362"},"GeekOS\u8fdb\u7a0b\u72b6\u6001\u53ca\u8f6c\u6362"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(53027).Z,width:"794",height:"319"})),(0,a.kt)("p",null,"GeekOS\u7cfb\u7edf\u6700\u65e9\u521b\u5efa\u7684\u5185\u6838\u8fdb\u7a0b\u6709Idle\u3001Reaper\u548cMain\u4e09\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u4eec\u7531Init_Scheduler\u51fd\u6570\u521b\u5efa\uff1a\u6700\u5148\u521d\u59cb\u5316\u4e00\u4e2a\u6838\u6001\u8fdb\u7a0bmainThread\uff0c\u5e76\u5c06\u8be5\u8fdb\u7a0b\u4f5c\u4e3a\u5f53\u524d\u8fd0\u884c\u8fdb\u7a0b\uff0c\u51fd\u6570\u6700\u540e\u8fd8\u8c03\u7528Start_Kernel_Thread \u51fd\u6570\u521b\u5efa\u4e86\u4e24\u4e2a\u7cfb\u7edf\u8fdb\u7a0bIdle\u548cReaper\u3002 \u6240\u4ee5\uff0cIdle\u3001Reaper\u548cMain\u4e09\u4e2a\u8fdb\u7a0b\u662f\u7cfb\u7edf\u4e2d\u6700\u65e9\u5b58\u5728\u7684\u8fdb\u7a0b\u3002"),(0,a.kt)("mermaid",{value:"graph TB\nA((Init_Scheduler))  \nB((mainThread))  \n\nA--\x3eB"}),(0,a.kt)("mermaid",{value:"graph TB\nA((Start_Kernel_Thread))  \nB((Idle))\nC((Reaper))\n\nA--\x3eB\nA--\x3eC"}),(0,a.kt)("h2",{id:"geekos\u7684\u7528\u6237\u6001\u8fdb\u7a0b"},"GeekOS\u7684\u7528\u6237\u6001\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u5728GeekOS\u4e2d\u4e3a\u4e86\u533a\u5206\u7528\u6237\u6001\u8fdb\u7a0b\u548c\u5185\u6838\u8fdb\u7a0b\uff0c\u5728Kernel_Thread\u7ed3\u6784\u4f53\u4e2d\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5b57\u6bb5 userContext\uff0c\u6307\u5411\u7528\u6237\u6001\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002\u5bf9\u4e8e\u5185\u6838\u8fdb\u7a0b\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6307\u9488\u4e3a\u7a7a\uff0c\u800c\u7528\u6237\u6001\u8fdb\u7a0b\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u7528\u6237\u4e0a\u4e0b\u6587\uff08User_Context\uff09\u3002\u56e0\u6b64\uff0c\u5728GeekOS\u4e2d\u8981\u5224\u65ad\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5185\u6838\u8fdb\u7a0b\u8fd8\u662f\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u53ea\u8981\u901a\u8fc7userContext\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a\u6765\u5224\u65ad\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(98391).Z,width:"794",height:"306"})),(0,a.kt)("h2",{id:"user_context\u7ed3\u6784\u7ed3\u6784"},"User_Context\u7ed3\u6784\u7ed3\u6784"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="User_Context\u7ed3\u6784\u7ed3\u6784"',title:'"User_Context\u7ed3\u6784\u7ed3\u6784"'},"struct User_Context {  \n\xa0\xa0\xa0 #define NUM_USER_LDT_ENTRIES 3  \n\xa0\xa0\xa0 struct Segment_Descriptor ldt[NUM_USER_LDT_ENTRIES]; // \u7528\u6237LDT  \n\xa0\xa0\xa0 struct Segment_Descriptor* ldtDescriptor; // LDT\u63cf\u8ff0\u7b26\xa0\xa0\xa0 \n\xa0\xa0\xa0 char* memory; // \u6307\u5411\u7528\u6237\u7a7a\u95f4\xa0\xa0\xa0 \n\xa0\xa0\xa0 ulong_t size; // \u7528\u6237\u7a7a\u95f4\u7684\u5927\u5c0f\xa0\xa0\xa0 \n\xa0\xa0\xa0 ushort_t ldtSelector; // ldt\u9009\u62e9\u5b50\xa0\xa0\xa0 \n\xa0\xa0\xa0 ushort_t csSelector;\xa0 // cs\u9009\u62e9\u5b50\xa0\xa0\xa0 \n\xa0\xa0\xa0 ushort_t ssSelector;\xa0 // ss\u9009\u62e9\u5b50\xa0\xa0\xa0 \n\xa0\xa0\xa0 ushort_t dsSelector;\xa0 // ds\u9009\u62e9\u5b50\xa0\xa0\xa0 \n\xa0\xa0\xa0 pde_t *pageDir;\xa0 \xa0\xa0 // \u9875\u8868\u6307\u9488\xa0\xa0\xa0 \n\xa0\xa0\xa0 ulong_t entryAddr;\xa0 \xa0 // \u7528\u6237\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\xa0\xa0\xa0 \n\xa0\xa0\xa0 ulong_t argBlockAddr;\xa0 // \u53c2\u6570\u5757\u5730\u5740\xa0\xa0\xa0 \n\xa0\xa0\xa0 ulong_t stackPointerAddr; // \u7528\u6237\u6001\u8fdb\u7a0b\u7684\u6808\u6307\u9488\xa0\xa0\xa0 \n\xa0\xa0\xa0 int refCount;\xa0 // \u5f15\u7528\u6570\xa0\xa0\xa0 \n\xa0\xa0\xa0 struct File *fileList[USER_MAX_FILES]; // \u6253\u5f00\u6587\u4ef6\u5217\u8868\xa0\xa0\xa0 \n\xa0\xa0\xa0 int fileCount;\xa0 // \u6253\u5f00\u6587\u4ef6\u8ba1\u6570  \n};\n")),(0,a.kt)("h2",{id:"\u7528\u6237\u6001\u8fdb\u7a0b\u7a7a\u95f4"},"\u7528\u6237\u6001\u8fdb\u7a0b\u7a7a\u95f4"),(0,a.kt)("p",null,"\u6bcf\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u90fd\u62e5\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u5185\u5b58\u6bb5\u7a7a\u95f4\uff0c\u5982\uff1a\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u3001\u6808\u6bb5\u7b49\uff0c\u6bcf\u4e2a\u6bb5\u6709\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\uff08segment descriptor\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u8868\uff08Local Descriptor Table\uff09\uff0c\u7528\u4e8e\u4fdd\u5b58\u8be5\u8fdb\u7a0b\u7684\u6240\u6709\u6bb5\u63cf\u8ff0\u7b26\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fd8\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u63cf\u8ff0\u7b26\u8868\uff08GDT\uff0cGlobal Descriptor Table\uff09\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e86\u7cfb\u7edf\u4e2d\u6240\u6709\u8fdb\u7a0b\u7684ldt\u63cf\u8ff0\u7b26\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(84540).Z,width:"830",height:"438"})),(0,a.kt)("h3",{id:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efaldt\u7684\u6b65\u9aa4"},"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efaLDT\u7684\u6b65\u9aa4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Allocate_Segment_Descriptor()\u65b0\u5efa\u4e00\u4e2aLDT\u63cf\u8ff0\u7b26\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Selector()\u65b0\u5efa\u4e00\u4e2aLDT\u9009\u62e9\u5b50\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Init_Code_Segment_Descriptor()\u521d\u59cb\u5316\u4e00\u4e2a\u6587\u672c\u6bb5\u63cf\u8ff0\u7b26\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Init_Data_Segment_Descriptor()\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u636e\u6bb5\u63cf\u8ff0\u7b26\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Selector()\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u6bb5\u9009\u62e9\u5b50\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528\u51fd\u6570Selector()\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\uff08\u53ef\u6267\u884c\u4ee3\u7801\uff09\u6bb5\u9009\u62e9\u5b50\u3002")),(0,a.kt)("h2",{id:"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efa\u6d41\u7a0b"},"\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efa\u6d41\u7a0b"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(28542).Z,width:"607",height:"540"})),(0,a.kt)("h2",{id:"\u9879\u76ee\u5b9e\u73b0"},"\u9879\u76ee\u5b9e\u73b0"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Spawn\u51fd\u6570",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u201csrc/GeekOS/user.c\u201d\u6587\u4ef6\u4e2d\u7684\u51fd\u6570Spawn()\uff0c\u5176\u529f\u80fd\u662f\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ea7\u8fdb\u7a0b:")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="Spawn\u51fd\u6570\u7684\u529f\u80fd"',title:'"Spawn\u51fd\u6570\u7684\u529f\u80fd"'},"int Spawn(const char *program, const char *command, struct Kernel_Thread **pThread)\n//\u53c2\u6570\u8bf4\u660e\uff1aProgram\u5bf9\u5e94\u7684\u662f\u8981\u8bfb\u5165\u5185\u5b58\u7f13\u51b2\u533a\u7684\u53ef\u6267\u884c\u6587\u4ef6\n//Command\u662f\u7528\u6237\u6267\u884c\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u547d\u4ee4\u884c\u5b57\u7b26\u4e32\n//pThread\u662f\u5b58\u653e\u6307\u5411\u521a\u521b\u5efa\u8fdb\u7a0b\u7684\u6307\u9488\u3002\n")),(0,a.kt)("p",null,"Spawn\u51fd\u6570\u4e3b\u8981\u5b8c\u6210\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528Read_Fully\u51fd\u6570\u5c06\u540d\u4e3aprogram\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5168\u90e8\u8bfb\u5165\u5185\u5b58\u7f13\u51b2\u533a\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528Parse_ELF_Executable\u51fd\u6570\uff0c\u5206\u6790ELF\u683c\u5f0f\u6587\u4ef6\u3002Parse_ELF_Executable\u51fd\u6570\u529f\u80fd\u5728\u9879\u76ee1\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528Load_User_Program\u5c06\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u6bb5\u548c\u6570\u636e\u6bb5\u7b49\u88c5\u5165\u5185\u5b58\uff0c\u521d\u59cb\u5316User_context\u6570\u636e\u7ed3\u6784\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8c03\u7528Start_User_Thread\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u5e76\u4f7f\u8be5\u8fdb\u7a0b\u8fdb\u5165\u51c6\u5907\u8fd0\u884c\u961f\u5217\u3002")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Load_User_Program\u51fd\u6570")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/userseg.c"',title:'"/src/geekos/userseg.c"'},"int Load_User_Program(char *exeFileData, ulong_t exeFileLength,\nstruct Exe_Format *exeFormat, const char *command,\nstruct User_Context **pUserContext)\n/* \u53c2\u6570\u8bf4\u660e\uff1a\nexeFileData\u2014\u2014\u4fdd\u5b58\u5728\u5185\u5b58\u7f13\u51b2\u4e2d\u7684\u7528\u6237\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\uff1b\nexeFileLength\u2014\u2014\u53ef\u6267\u884c\u6587\u4ef6\u7684\u957f\u5ea6\uff1b\nexeFormat\u2014\u2014\u8c03\u7528Parse_ELF_Executable\u51fd\u6570\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u4fe1\u606f\uff1b\ncommand\u2014\u2014\u7528\u6237\u8f93\u5165\u7684\u547d\u4ee4\u884c\uff0c\u5305\u62ec\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u53ca\u5176\u4ed6\u53c2\u6570\uff1b\npUserContext\u2014\u2014\u6307\u5411User_Conetxt\u7684\u6307\u9488\uff0c\u662f\u672c\u51fd\u6570\u5b8c\u6210\u7528\u6237\u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u7684\u5bf9\u8c61\n*/\n\n1. \u201csrc/GeekOS/user.c\u201d\u6587\u4ef6\u4e2d\u7684\u51fd\u6570Spawn()\uff0c\u5176\u529f\u80fd\u662f\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ea7\u8fdb\u7a0b\uff1b\n")),(0,a.kt)("p",null,"Load_User_Program\u4e3b\u8981\u5b9e\u73b0\u529f\u80fd\u5982\u4e0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6839\u636eParse_ELF_Executable\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679cExe_Format\u4e2d\u7684Exe_Segment\u7ed3\u6784\u63d0\u4f9b\u7684\u7528\u6237\u7a0b\u5e8f\u6bb5\u4fe1\u606f\uff0c\u7528\u6237\u547d\u4ee4\u53c2\u6570\u53ca\u7528\u6237\u6001\u8fdb\u7a0b\u6808\u5927\u5c0f\u8ba1\u7b97\u7528\u6237\u6001\u8fdb\u7a0b\u6240\u9700\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4\uff0c\u5373\u8981\u5206\u914d\u7ed9\u7528\u6237\u6001\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u4e3a\u7528\u6237\u7a0b\u5e8f\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u521d\u59cb\u5316\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6839\u636eExe_Segment\u63d0\u4f9b\u7684\u7528\u6237\u6bb5\u4fe1\u606f\u521d\u59cb\u5316\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u4ee5\u53ca\u6808\u6bb5\u7684\u6bb5\u63cf\u8ff0\u7b26\u548c\u6bb5\u9009\u62e9\u5b50\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6839\u636e\u6bb5\u4fe1\u606f\u5c06\u7528\u6237\u7a0b\u5e8f\u4e2d\u7684\u5404\u6bb5\u5185\u5bb9\u590d\u5236\u5230\u5206\u914d\u7684\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6839\u636eExe_Format\u7ed3\u6784\u521d\u59cb\u5316User_Context\u7ed3\u6784\u4e2d\u7684\u7528\u6237\u6001\u8fdb\u7a0b\u4ee3\u7801\u6bb5\u5165\u53e3entry\u5b57\u6bb5\uff0c\u5e76\u6839\u636ecommand\u53c2\u6570\u521d\u59cb\u5316\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u53c2\u6570\u5757\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u521d\u59cb\u5316User_Context\u7ed3\u6784\u7684\u7528\u6237\u6253\u5f00\u6587\u4ef6\u5217\u8868\uff0c\u5e76\u6dfb\u52a0\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u5c06\u521d\u59cb\u5316\u5b8c\u6bd5\u7684User_Context\u6307\u9488\u8d4b\u4e88*pUserContext\uff0c\u8fd4\u56de0\u8868\u793a\u6210\u529f\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/user.c | Spawn()\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ea7\u8fdb\u7a0b"',title:'"src/GeekOS/user.c',"|":!0,'Spawn()\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ea7\u8fdb\u7a0b"':!0},"int Spawn(const char *program, const char *command, struct Kernel_Thread **pThread) {     \n    int res; \n\n    /* \u8bfb\u53d6 ELF \u6587\u4ef6 */     \n    char *exeFileData = NULL; \n    ulong_t exeFileLength = 0;     \n    res = Read_Fully(program, (void**)&exeFileData, &exeFileLength); \n    //\u5c06\u540d\u4e3aprogram\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5168\u90e8\u8bfb\u5165\u5185\u5b58\u7f13\u51b2\u533a\n    \n    if (res != 0)     \n    {                \n        if (exeFileData != NULL) Free(exeFileData);         \n        return ENOTFOUND;     \n    } \n\n    /* \u5206\u6790 ELF \u6587\u4ef6 */     \n    struct Exe_Format exeFormat;     \n    res = Parse_ELF_Executable(exeFileData, exeFileLength, &exeFormat);     \n    if (res != 0)     \n    {                 \n        if (exeFileData != NULL) Free(exeFileData);         \n        return res;     \n    }\n\n    /* \u52a0\u8f7d\u7528\u6237\u7a0b\u5e8f */     \n    struct User_Context *userContext = NULL;     \n    res = Load_User_Program(exeFileData, exeFileLength, &exeFormat, command, &userContext);     \n    if (res != 0)     \n    {                \n        if (exeFileData != NULL) Free(exeFileData);         \n        if (userContext != NULL) Destroy_User_Context(userContext);         \n        return res;     \n    }     \n    if (exeFileData != NULL) Free(exeFileData);     \n    exeFileData = NULL;     \n\n    /* \u5f00\u59cb\u7528\u6237\u8fdb\u7a0b */     \n    struct Kernel_Thread *thread = NULL;     \n    thread = Start_User_Thread(userContext, false);     \n    /* \u8d85\u51fa\u5185\u5b58 \u521b\u5efa\u65b0\u8fdb\u7a0b\u5931\u8d25 */     \n    if (thread == NULL) \n    {         \n        if (userContext != NULL) Destroy_User_Context(userContext);\n             return ENOMEM;     \n    }\n\n    KASSERT(thread->refCount == 2);\n    /* \u8fd4\u56de\u6838\u5fc3\u8fdb\u7a0b\u7684\u6307\u9488 */ \n    *pThread = thread; \n    return 0; \n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},'"src/GeekOS/user.c"\u6587\u4ef6\u4e2d\u7684\u51fd\u6570',(0,a.kt)("inlineCode",{parentName:"li"},"Switch_To_User_Context()"),"\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5728\u6267\u884c\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u524d\u8c03\u7528\u8be5\u51fd\u6570\u4ee5\u5207\u6362\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/user.c | Switch_To_User_Context()"',title:'"src/GeekOS/user.c',"|":!0,'Switch_To_User_Context()"':!0},"void Switch_To_User_Context(struct Kernel_Thread* kthread, struct Interrupt_State* state)\n{\n    /*\n     * Hint: Before executing in user mode, you will need to call\n     * the Set_Kernel_Stack_Pointer() and Switch_To_Address_Space()\n     * functions.\n     */\n\n    //\u4e4b\u524d\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684 userContxt\n    static struct User_Context* s_currentUserContext;\n\n    //\u6307\u5411User_Conetxt\u7684\u6307\u9488\uff0c\u5e76\u521d\u59cb\u5316\u4e3a\u51c6\u5907\u5207\u6362\u7684\u8fdb\u7a0b\n    struct User_Context* userContext = kthread->userContext;\n\n    KASSERT(!Interrupts_Enabled());\n\n    //userContext\u4e3a0\u8868\u793a\u6b64\u8fdb\u7a0b\u4e3a\u6838\u5fc3\u6001\u8fdb\u7a0b\u5c31\u4e0d\u7528\u5207\u6362\u5730\u5740\u7a7a\u95f4\n    if (userContext == 0) return;\n\n    if (userContext != s_currentUserContext)\n    {\n        //\u4e3a\u7528\u6237\u6001\u8fdb\u7a0b\u65f6\u5219\u5207\u6362\u5730\u5740\u7a7a\u95f4\n        Switch_To_Address_Space(userContext);\n        //\u65b0\u8fdb\u7a0b\u7684\u6838\u5fc3\u6808\u6307\u9488 \n        ulong_t esp0 = ((ulong_t)kthread->stackPage) + PAGE_SIZE;\n        //\u8bbe\u7f6e\u5185\u6838\u5806\u6808\u6307\u9488\n        Set_Kernel_Stack_Pointer(esp0);\n        //\u4fdd\u5b58\u65b0\u7684 userContxt\n        s_currentUserContext = userContext;\n    }\n}\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},'"src/GeekOS/elf.c"\u201d"\u6587\u4ef6\u4e2d\u7684\u51fd\u6570Parse_ELF_Executable\uff08\uff09\u3002\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u9879\u76ee1\u5df2\u7ecf\u5b8c\u6210\u3002'),(0,a.kt)("li",{parentName:"ol"},'"src/GeekOS/userseg.c"\u6587\u4ef6\u4e2d\u4e3b\u8981\u662f\u5b9e\u73b0\u4e00\u4e9b\u4e3a\u5b9e\u73b0\u5bf9"src/GeekOS/user.c"\u4e2d\u9ad8\u5c42\u64cd\u4f5c\u652f\u6301\u7684\u51fd\u6570\u3002\n',(0,a.kt)("inlineCode",{parentName:"li"},"Create_User_Context()"),",\u7528\u4e8e\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u7528\u6237\u4e0a\u4e0b\u6587\u7ed3\u6784:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Create_User_Context(),\u7528\u4e8e\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u7528\u6237\u4e0a\u4e0b\u6587\u7ed3\u6784"',title:'"src/GeekOS/userseg.c',"|":!0,'Create_User_Context(),\u7528\u4e8e\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u7528\u6237\u4e0a\u4e0b\u6587\u7ed3\u6784"':!0},"/**\u9700\u5728\u6b64\u6587\u4ef6\u5404\u51fd\u6570\u524d\u589e\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u7684\u529f\u80fd\u662f\u6309\u7ed9\u5b9a\u7684\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u7ea7\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a  \n\u51fd\u6570\u529f\u80fd:\u6309\u7ed9\u5b9a\u7684\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u7ea7\u8fdb\u7a0b\u4e0a\u4e0b\u6587**/\nstatic struct User_Context* Create_User_Context(ulong_t size) \n{     \n    struct User_Context *userContext;\n    size = Round_Up_To_Page(size);     \n    userContext = (struct User_Context *)Malloc(sizeof(struct User_Context));\n    /* \u5185\u5b58\u5206\u914d\u6210\u529f\u5219\u7ee7\u7eed\u4e3a userContext \u4e0b\u7684 memory \u5206\u914d\u5185\u5b58\u7a7a\u95f4 */\n    if (userContext == NULL)     \n    {\n         return NULL;\n    }     \n    userContext->memory = (char *)Malloc(size);     \n    if (userContext->memory == NULL)\n    {         \n         Free(userContext);         \n         return NULL;\n    }     \n    memset(userContext->memory, '\\0', size);\n    userContext->size = size; \n\n    /* \u65b0\u5efa\u4e00\u4e2a LDT \u63cf\u8ff0\u7b26 */     \n    userContext->ldtDescriptor = Allocate_Segment_Descriptor();     \n    if (userContext->ldtDescriptor == NULL)\n    {                \n         Free(userContext->memory);         \n         return NULL;     \n    }     \n    /* \u521d\u59cb\u5316\u6bb5\u63cf\u8ff0\u7b26 */\n    Init_LDT_Descriptor(userContext->ldtDescriptor, userContext->ldt, NUM_USER_LDT_ENTRIES);     \n    /* \u65b0\u5efa\u4e00\u4e2a LDT \u9009\u62e9\u5b50 */\n    userContext->ldtSelector = Selector(KERNEL_PRIVILEGE, true, Get_Descriptor_Index(userContext->ldtDescriptor));     \n    /* \u65b0\u5efa\u4e00\u4e2a\u4ee3\u7801\u6bb5\u63cf\u8ff0\u7b26 */     \n    Init_Code_Segment_Descriptor(&userContext->ldt[0], (ulong_t)userContext->memory, size / PAGE_SIZE, USER_PRIVILEGE);\n    /* \u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u6bb5\u63cf\u8ff0\u7b26 */     \n    Init_Data_Segment_Descriptor(&userContext->ldt[1], (ulong_t)userContext->memory, size / PAGE_SIZE, USER_PRIVILEGE);     \n    /* \u65b0\u5efa\u6570\u636e\u6bb5\u548c\u4ee3\u7801\u6bb5\u9009\u62e9\u5b50 */\n    userContext->csSelector = Selector(USER_PRIVILEGE, false, 0); \n    userContext->dsSelector = Selector(USER_PRIVILEGE, false, 1);\n    /* \u5c06\u5f15\u7528\u6570\u6e05\u96f6 */     \n    userContext->refCount = 0; \n\n    return userContext; \n} \n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Destroy_User_Context()"),"\u51fd\u6570\u7684\u529f\u80fd\u662f\u91ca\u653e\u7528\u6237\u6001\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Destroy_User_Context(),\u91ca\u653e\u7528\u6237\u6001\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\u8d44\u6e90"',title:'"src/GeekOS/userseg.c',"|":!0,'Destroy_User_Context(),\u91ca\u653e\u7528\u6237\u6001\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\u8d44\u6e90"':!0},"void Destroy_User_Context(struct User_Context* userContext) \n{     \n    KASSERT(userContext->refCount == 0);     \n    /* \u91ca\u653e LDT descriptor */     \n    Free_Segment_Descriptor(userContext->ldtDescriptor);     \n    /* \u91ca\u653e\u5185\u5b58\u7a7a\u95f4 */     \n    Disable_Interrupts();     \n    Free(userContext->memory);     \n    Free(userContext);     \n    Enable_Interrupts(); \n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Load_User_Program()"),"\u51fd\u6570\u7684\u529f\u80fd\u901a\u8fc7\u52a0\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\u955c\u50cf\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684User_Context\u7ed3\u6784\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Load_User_Program(),\u52a0\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\u955c\u50cf\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684User_Context\u7ed3\u6784"',title:'"src/GeekOS/userseg.c',"|":!0,'Load_User_Program(),\u52a0\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\u955c\u50cf\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684User_Context\u7ed3\u6784"':!0},"int Load_User_Program(char *exeFileData, ulong_t exeFileLength,     \nstruct Exe_Format *exeFormat, const char *command,     \nstruct User_Context **pUserContext) \n{     \n    unsigned int i;     \n    struct User_Context *userContext = NULL; \n\n    /* \u8981\u5206\u914d\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4 */     \n    ulong_t maxva = 0;     \n    /* \u8ba1\u7b97\u7528\u6237\u6001\u8fdb\u7a0b\u6240\u9700\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4 */     \n    for (i = 0; i < exeFormat->numSegments; i++)     \n    {         \n        struct Exe_Segment *segment = &exeFormat->segmentList[i];        \n        ulong_t topva = segment->startAddress + segment->sizeInMemory;        \n        if (topva > maxva) maxva = topva; \n    } \n    /* \u7a0b\u5e8f\u53c2\u6570\u6570\u76ee */     \n    unsigned int numArgs;     \n    /* \u83b7\u53d6\u53c2\u6570\u5757\u7684\u5927\u5c0f */     \n    ulong_t argBlockSize;     \n    Get_Argument_Block_Size(command, &numArgs, &argBlockSize);     \n    /* \u7528\u6237\u8fdb\u7a0b\u5927\u5c0f = \u53c2\u6570\u5757\u603b\u5927\u5c0f + \u8fdb\u7a0b\u5806\u6808\u5927\u5c0f(8192) */     \n    ulong_t size = Round_Up_To_Page(maxva) + DEFAULT_USER_STACK_SIZE;     \n    /* \u53c2\u6570\u5757\u5730\u5740 */     \n    ulong_t argBlockAddr = size;     \n    size += argBlockSize;     \n    /* \u6309\u76f8\u5e94\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b */     \n    userContext = Create_User_Context(size);     \n    /* \u5982\u679c\u8fdb\u7a0b\u521b\u5efa\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\u4fe1\u606f */     \n    if (userContext == NULL)     \n    {                  \n        return -1;     \n    } \n\n    /* \u5c06\u7528\u6237\u7a0b\u5e8f\u4e2d\u7684\u5404\u6bb5\u5185\u5bb9\u590d\u5236\u5230\u5206\u914d\u7684\u7528\u6237\u5185\u5b58\u7a7a\u95f4 */     \n    for (i = 0; i < exeFormat->numSegments; i++)     \n    {        \n        struct Exe_Segment *segment = &exeFormat->segmentList[i];        \n        memcpy(userContext->memory + segment->startAddress,                \n                exeFileData + segment->offsetInFile,                \n                segment->lengthInFile);    \n    } \n\n    /* \u683c\u5f0f\u5316\u53c2\u6570\u5757 */     \n    Format_Argument_Block(userContext->memory + argBlockAddr, numArgs, argBlockAddr, command);     \n    /* \u521d\u59cb\u5316\u6570\u636e\u6bb5\u3001\u5806\u6808\u6bb5\u53ca\u4ee3\u7801\u6bb5\u4fe1\u606f */     \n    userContext->entryAddr = exeFormat->entryAddr;     \n    userContext->argBlockAddr = argBlockAddr;     \n    userContext->stackPointerAddr = argBlockAddr; \n\n    /* \u5c06\u521d\u59cb\u5316\u5b8c\u6bd5\u7684 User_Context \u8d4b\u7ed9*pUserContext */     \n    *pUserContext = userContext; \n\n    return 0; \n} \n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Copy_From_User()"),"\u548c",(0,a.kt)("inlineCode",{parentName:"p"},"Copy_To_User()"),"\u51fd\u6570\u7684\u529f\u80fd\u662f\u5728\u7528\u6237\u5730\u5740\u7a7a\u95f4\u548c\u5185\u6838\u5730\u5740\u7a7a\u95f4\u4e4b\u95f4\u590d\u5236\u6570\u636e\uff0c\u5728\u5206\u6bb5\u5b58\u50a8\u5668\u7ba1\u7406\u6a21\u5f0f\u4e0b\uff0c\u53ea\u8981\u6bb5\u6709\u6548\uff0c\u8c03\u7528memcpy\u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Copy_From_User()"',title:'"src/GeekOS/userseg.c',"|":!0,'Copy_From_User()"':!0},"bool Copy_From_User(void* destInKernel, ulong_t srcInUser, ulong_t bufSize) \n{     \n    struct User_Context* userContext = g_currentThread->userContext;     \n    /* \u5982\u679c\u8bbf\u95ee\u7684\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u975e\u6cd5(\u8d8a\u754c\u8bbf\u95ee)\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5931\u8d25 */     \n    if (!Validate_User_Memory(userContext, srcInUser, bufSize))         \n        return false;     \n    /* \u62f7\u8d1d\u5f53\u524d\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u6570\u636e\u5230\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4 */     \n    memcpy(destInKernel, userContext->memory + srcInUser, bufSize);     \n    /* \u62f7\u8d1d\u6210\u529f\u5219\u8fd4\u56de 1 */     \n    return true; \n} \n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Copy_To_User()"',title:'"src/GeekOS/userseg.c',"|":!0,'Copy_To_User()"':!0},"bool Copy_To_User(ulong_t destInUser, void* srcInKernel, ulong_t bufSize) \n{     \n    struct User_Context* userContext = g_currentThread->userContext;     \n    /* \u5982\u679c\u9700\u8981\u62f7\u8d1d\u7684\u5185\u5bb9\u8d85\u51fa\u7528\u6237\u5185\u5b58\u7a7a\u95f4(\u8d8a\u754c)\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5931\u8d25 */     \n    if (!Validate_User_Memory(userContext, destInUser, bufSize))         \n        return false;     \n    /* \u62f7\u8d1d\u5f53\u524d\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4\u6570\u636e\u5230\u7528\u6237\u5185\u5b58\u7a7a\u95f4 */     \n    memcpy(userContext->memory + destInUser, srcInKernel, bufSize);     \n    /* \u62f7\u8d1d\u6210\u529f\u5219\u8fd4\u56de 1 */     \n    return true; \n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Switch_To_Address_Space()"),"\u51fd\u6570\u7684\u529f\u80fd\u662f\u901a\u8fc7\u5c06\u8fdb\u7a0b\u7684LDT\u88c5\u5165\u5230LDT\u5bc4\u5b58\u5668\u6765\u6fc0\u6d3b\u7528\u6237\u7684\u5730\u5740\u7a7a\u95f4\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/userseg.c | Switch_To_Address_Space(),\u6fc0\u6d3b\u7528\u6237\u7684\u5730\u5740\u7a7a\u95f4"',title:'"src/GeekOS/userseg.c',"|":!0,'Switch_To_Address_Space(),\u6fc0\u6d3b\u7528\u6237\u7684\u5730\u5740\u7a7a\u95f4"':!0},'void Switch_To_Address_Space(struct User_Context *userContext) \n{     \n    /* \u5207\u6362\u5230\u65b0\u7684\u5c40\u90e8\u63cf\u8ff0\u7b26\u8868(LDT) */     \n    ushort_t ldtSelector = userContext->ldtSelector;     \n    __asm__ __volatile__ (     \n    "lldt %0"     \n    :     \n    : "a" (ldtSelector)     \n    ); \n}\n')),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},'"src/GeekOS/kthread.c"\u6587\u4ef6\u4e2d\u7684Start_User_Thread\u51fd\u6570\u548cSetup_User_Thread\u51fd\u6570\u3002',(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},'\u4fee\u6539/project2/src/geekos/kthread.c \u6587\u4ef6\uff0c\u6dfb\u52a0\u5934\u6587\u4ef6"#include <geekos/user.h>"\u3002\n',(0,a.kt)("inlineCode",{parentName:"p"},"Setup_User_Thread()"),"\u51fd\u6570\u7684\u529f\u80fd\u662f\u4e3a\u8fdb\u7a0b\u521d\u59cb\u5316\u5185\u6838\u6808\uff0c\u6808\u4e2d\u662f\u4e3a\u8fdb\u7a0b\u9996\u6b21\u8fdb\u5165\u7528\u6237\u6001\u8fd0\u884c\u65f6\u8bbe\u7f6e\u5904\u7406\u5668\u72b6\u6001\u8981\u4f7f\u7528\u7684\u6570\u636e\u3002")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/kthread.c | Setup_User_Thread(),\u4e3a\u8fdb\u7a0b\u521d\u59cb\u5316\u5185\u6838\u6808"',title:'"src/GeekOS/kthread.c',"|":!0,'Setup_User_Thread(),\u4e3a\u8fdb\u7a0b\u521d\u59cb\u5316\u5185\u6838\u6808"':!0},'/*\n * Set up the a user mode thread.\n */\nvoid Setup_User_Thread(\n    struct Kernel_Thread* kthread, struct User_Context* userContext)\n{\n    /*\n     * Push the argument to the thread start function, and the\n     * return address (the Shutdown_Thread function, so the thread will\n     * go away cleanly when the start function returns).\n     */\n    ulong_t eflags = EFLAGS_IF;     \n    unsigned int csSelector = userContext->csSelector;  /* CS \u9009\u62e9\u5b50 */     \n    unsigned int dsSelector = userContext->dsSelector;  /* DS \u9009\u62e9\u5b50 */ \n\n    /* \u8c03\u7528 Attach_User_Context \u52a0\u8f7d\u7528\u6237\u4e0a\u4e0b\u6587 */  \n    Attach_User_Context(kthread, userContext); \n\n    /* \u521d\u59cb\u5316\u7528\u6237\u6001\u8fdb\u7a0b\u5806\u6808\uff0c\u4f7f\u4e4b\u770b\u4e0a\u53bb\u50cf\u521a\u88ab\u4e2d\u65ad\u8fd0\u884c\u4e00\u6837 */     \n    /* \u5206\u522b\u8c03\u7528 Push \u51fd\u6570\u5c06\u4ee5\u4e0b\u6570\u636e\u538b\u5165\u5806\u6808 */     \n    Push(kthread, dsSelector);  /* DS \u9009\u62e9\u5b50 */     \n    Push(kthread, userContext->stackPointerAddr);  /* \u5806\u6808\u6307\u9488 */     \n    Push(kthread, eflags);  /* Eflags */     \n    Push(kthread, csSelector);  /* CS \u9009\u62e9\u5b50 */     \n    Push(kthread, userContext->entryAddr);  /* \u7a0b\u5e8f\u8ba1\u6570\u5668 */     \n    Push(kthread, 0);  /* \u9519\u8bef\u4ee3\u7801(0) */     \n    Push(kthread, 0);  /* \u4e2d\u65ad\u53f7(0) */ \n\n//    if (uthreadDebug)         \n//      Print("Entry addr=%lx\\n", userContext->entryAddr); \n\n    /* \u521d\u59cb\u5316\u901a\u7528\u5bc4\u5b58\u5355\u5143\uff0c\u5411 esi \u4f20\u9012\u53c2\u6570\u5757\u5730\u5740 */     \n    Push(kthread, 0);  /* eax */     \n    Push(kthread, 0);  /* ebx */     \n    Push(kthread, 0);  /* ecx */     \n    Push(kthread, 0);  /* edx */     \n    Push(kthread, userContext->argBlockAddr);  /* esi */     \n    Push(kthread, 0);  /* edi */     \n    Push(kthread, 0);  /* ebp */ \n\n    /* \u521d\u59cb\u5316\u6570\u636e\u6bb5\u5bc4\u5b58\u5355\u5143 */     \n    Push(kthread, dsSelector);  /* ds */     \n    Push(kthread, dsSelector);  /* es */     \n    Push(kthread, dsSelector);  /* fs */     \n    Push(kthread, dsSelector);  /* gs */ \n}\n\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Start_User_Thread()"),"\u662f\u4e00\u4e2a\u9ad8\u5c42\u64cd\u4f5c\uff0c\u8be5\u51fd\u6570\u4f7f\u7528User_Context\u5bf9\u8c61\u5f00\u59cb\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="src/GeekOS/kthread.c | Start_User_Thread(),User_Context\u5bf9\u8c61\u5f00\u59cb\u4e00\u4e2a\u65b0\u8fdb\u7a0b"',title:'"src/GeekOS/kthread.c',"|":!0,'Start_User_Thread(),User_Context\u5bf9\u8c61\u5f00\u59cb\u4e00\u4e2a\u65b0\u8fdb\u7a0b"':!0},"/*\n * Start a user-mode thread (i.e., a process), using given user context.\n * Returns pointer to the new thread if successful, null otherwise.\n */\nstruct Kernel_Thread*\nStart_User_Thread(struct User_Context* userContext, bool detached)\n{\n    /* \u5982\u679c\u4f20\u5165\u7684\u7528\u6237\u4e0a\u4e0b\u6587\u5b57\u6bb5\u4e3a\u7a7a(\u975e\u7528\u6237\u6001\u8fdb\u7a0b)\u5219\u8fd4\u56de\u9519\u8bef */     \n    if (userContext == NULL)     \n    {                \n        return NULL;    \n    } \n\n    /* \u5efa\u7acb\u7528\u6237\u6001\u8fdb\u7a0b */     \n    struct Kernel_Thread *kthread = Create_Thread(PRIORITY_USER, detached);     \n    if (kthread == NULL) \n    {                  \n        return NULL;     \n    }     \n    Setup_User_Thread(kthread, userContext);     \n\n    /* \u5c06\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\u52a0\u5165\u5c31\u7eea\u8fdb\u7a0b\u961f\u5217 */     \n    Make_Runnable_Atomic(kthread); \n\n    /* \u65b0\u7528\u6237\u6001\u8fdb\u7a0b\u521b\u5efa\u6210\u529f\uff0c\u8fd4\u56de\u6307\u5411\u8be5\u8fdb\u7a0b\u7684\u6307\u9488 */    \n    return kthread; \n}\n\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},'"src/GeekOS/syscall.c"\u6587\u4ef6\u4e2d\u4e3b\u8981\u662f\u5b9e\u73b0\u7528\u6237\u7a0b\u5e8f\u8981\u6c42\u5185\u6838\u8fdb\u884c\u670d\u52a1\u7684\u4e00\u4e9b\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u5b9a\u4e49\u3002\n\xa0',(0,a.kt)("inlineCode",{parentName:"li"},"Copy_User_String()"),"\uff0c\u7528\u4e8e\u5728 Sys_PrintString \u4e2d\u4f7f\u7528")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c | Copy_User_String()"',title:'"/src/geekos/syscall.c',"|":!0,'Copy_User_String()"':!0},"/* \u6dfb\u52a0\u51fd\u6570 Copy_User_String \u4ee5\u4fbf\u5728\u51fd\u6570 Sys_PrintString \u4e2d\u4f7f\u7528 */\nstatic int Copy_User_String(ulong_t uaddr, ulong_t len,\n ulong_t maxLen, char **pStr)\n{\n    int result = 0;\n    char *str;\n    /* \u5b57\u7b26\u4e32\u8d85\u8fc7\u6700\u5927\u957f\u5ea6 */\n    if (len > maxLen) return EINVALID;\n    /* \u4e3a\u5b57\u7b26\u4e32\u5206\u914d\u5185\u5b58\u7a7a\u95f4 */\n    str = (char*)Malloc(len + 1);\n    if (str == 0){\n        return ENOMEM;\n        goto fail;\n    }\n    /* \u4ece\u7528\u6237\u5185\u5b58\u7a7a\u95f4\u4e2d\u590d\u5236\u5b57\u7b26\u4e32\u5230\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4 */\n    if (!Copy_From_User(str, uaddr, len))\n    {\n        result = EINVALID;\n        Free(str);\n        goto fail;\n    }\n    str[len] = '\\0';\n    /* \u62f7\u8d1d\u6210\u529f */\n    *pStr = str;\nfail:\n    return result;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_Exit()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c | Sys_Exit()"',title:'"/src/geekos/syscall.c',"|":!0,'Sys_Exit()"':!0},"static int Sys_Exit(struct Interrupt_State* state)\n{\n    Exit(state->ebx);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_PrintString()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c | Sys_PrintString()"',title:'"/src/geekos/syscall.c',"|":!0,'Sys_PrintString()"':!0},"static int Sys_PrintString(struct Interrupt_State* state)\n{\n    int result = 0;//\u8fd4\u56de\u503c    \n    uint_t length = state->ecx;//\u5b57\u7b26\u4e32\u957f\u5ea6\n    uchar_t* buf = 0;\n    if (length > 0){\n        /* \u5c06\u5b57\u7b26\u4e32\u590d\u5236\u5230\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4 */\n        if (Copy_User_String(state->ebx, length, 1023, (char**)&buf) != 0)\n            goto done;\n        /* \u8f93\u51fa\u5b57\u7b26\u4e32\u5230\u63a7\u5236\u53f0 */\n        Put_Buf(buf, length);\n    }\ndone:\n    if (buf != NULL) Free(buf);\n    return result;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_GetKey()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c | Sys_GetKey()"',title:'"/src/geekos/syscall.c',"|":!0,'Sys_GetKey()"':!0},"static int Sys_GetKey(struct Interrupt_State* state)\n{\n    /* \u8fd4\u56de\u6309\u952e\u7801 */\n    /* /geekos/keyboard.c\n    Keycode Wait_For_Key(void) */\n    return Wait_For_Key();\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_GetCursor()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_GetCursor(struct Interrupt_State* state)\n{\n    /* \u83b7\u53d6\u5f53\u524d\u5149\u6807\u6240\u5728\u5c4f\u5e55\u4f4d\u7f6e(\u884c\u548c\u5217) */\n    int row, col;\n    Get_Cursor(&row, &col);\n     if (!Copy_To_User(state->ebx, &row, sizeof(int)) ||\n !Copy_To_User(state->ecx, &col, sizeof(int)))\n        return -1;\n    return 0;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_SetAttr()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_SetAttr(struct Interrupt_State* state)\n{\n    /* \u8bbe\u7f6e\u5f53\u524d\u6587\u672c\u663e\u793a\u683c\u5f0f */\n    /* /geekos/screen.c\n    void Set_Current_Attr(uchar_t attrib) */\n    Set_Current_Attr((uchar_t)state->ebx);\n    return 0;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_PutCursor()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_PutCursor(struct Interrupt_State* state)\n{\n    /* \u8bbe\u7f6e\u5149\u6807\u7684\u4f4d\u7f6e(\u884c\u548c\u5217) */\n    return Put_Cursor(state->ebx, state->ecx) ? 0 : -1;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_Spawn()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_Spawn(struct Interrupt_State* state)\n{\n    int res;//\u7a0b\u5e8f\u8fd4\u56de\u503c\n    char *program = 0;//\u8fdb\u7a0b\u540d\u79f0\n    char *command = 0;//\u7528\u6237\u547d\u4ee4\n    struct Kernel_Thread *process;\n    /* \u590d\u5236\u7a0b\u5e8f\u540d\u548c\u547d\u4ee4\u5b57\u7b26\u4e32\u5230\u7528\u6237\u5185\u5b58\u7a7a\u95f4 */\n    res = Copy_User_String(state->ebx, state->ecx, VFS_MAX_PATH_LEN, &program);\n    if (res != 0)\n    {//\u4ece\u7528\u6237\u7a7a\u95f4\u590d\u5236\u8fdb\u7a0b\u540d\u79f0\n        goto fail;\n    }\n    res = Copy_User_String(state->edx, state->esi, 1023, &command);\n    if (res != 0)\n    {//\u4ece\u7528\u6237\u7a7a\u95f4\u590d\u5236\u7528\u6237\u547d\u4ee4   \n        goto fail;\n    }\n    /* \u751f\u6210\u7528\u6237\u8fdb\u7a0b */\n    Enable_Interrupts();//\u5f00\u4e2d\u65ad\n    res = Spawn(program, command, &process);//\u5f97\u5230\u8fdb\u7a0b\u540d\u79f0\u548c\u7528\u6237\u547d\u4ee4\u540e\u4fbf\u53ef\u751f\u6210\u4e00\u4e2a\u65b0\u8fdb\u7a0b\n    if (res == 0) {//\u82e5\u6210\u529f\u5219\u8fd4\u56de\u65b0\u8fdb\u7a0bID\u53f7   \n        KASSERT(process != 0);   \n        res = process->pid;  \n    }  \n    Disable_Interrupts();//\u5173\u4e2d\u65ad\n fail:\n    if (program != 0) \n        Free(program);\n    if (command != 0) \n        Free(command);\n    return res;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_Wait()"),"\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_Wait(struct Interrupt_State* state)\n{\n    int exitCode;\n    /* \u67e5\u627e\u9700\u8981\u7b49\u5f85\u7684\u8fdb\u7a0b */\n    struct Kernel_Thread *kthread = Lookup_Thread(state->ebx);\n    /* \u5982\u679c\u6ca1\u6709\u627e\u5230\u9700\u8981\u7b49\u5f85\u7684\u8fdb\u7a0b\uff0c\u5219\u8fd4\u56de\u9519\u8bef\u4ee3\u7801 */\n    if (kthread == 0) return -1;\n    /* \u7b49\u5f85\u6307\u5b9a\u8fdb\u7a0b\u7ed3\u675f */\n    Enable_Interrupts();\n    exitCode = Join(kthread);\n    Disable_Interrupts();\n    return exitCode;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sys_GetPID()"),"\u51fd\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/syscall.c"',title:'"/src/geekos/syscall.c"'},"static int Sys_GetPID(struct Interrupt_State* state)\n{\n    /* \u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684 ID(PID) */\n    return g_currentThread->pid;\n}\n")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"\u5728main.c\u6587\u4ef6\u4e2d\u6539\u5199\u751f\u6210\u7b2c\u4e00\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u7684\u51fd\u6570\u8c03\u7528\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"Spawn_Init_Process(void)"),"\xa0\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/src/geekos/main.c"',title:'"/src/geekos/main.c"'},'static void Spawn_Init_Process(void)\n{\n    struct Kernel_Thread *pThread;\n    Spawn("/c/shell.exe","/c/shell.exe",&pThread); \n}\n')),(0,a.kt)("p",null,"\u8f93\u5165\u8bbe\u7f6e\u4ee5\u5916\u7684\u547d\u4ee4\u5b57\u7b26\uff0c\u5230\u6307\u4ee4\u8def\u5f84\u627e\u76f8\u5e94\u7a0b\u5e8f\uff0c\u65b0\u5efa\u7acb\u8fdb\u7a0b\u6267\u884c\uff0c\u5982\uff1ab,c,long,null(\u5747\u653e\u5728project2/src/user/\u4e0b)"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(77142).Z,width:"663",height:"410"})),(0,a.kt)("h2",{id:"\u8bfe\u540e\u4f5c\u4e1a"},"\u8bfe\u540e\u4f5c\u4e1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"GeekOS \u7cfb\u7edf\u542f\u52a8\u540e\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a\u7528\u6237\u7ea7\u7ebf\u7a0b\u662f\u4ec0\u4e48\uff1f",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7b54\uff1ashell\u3002"))),(0,a.kt)("li",{parentName:"ol"},"GeekOS \u7cfb\u7edf\u4e2d\uff0c\u5185\u6838\u7ea7\u7ebf\u7a0b\u548c\u7528\u6237\u7ea7\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u7b54\uff1a\u8fdb\u7a0b\u7ed3\u6784\u4e0d\u540c.\u5185\u6838\u8fdb\u7a0b\u6ca1\u6709User_Context \u7ed3\u6784\u4f53\uff0c\u53ea\u6709Kernel_Thread\u7ed3\u6784\u4f53\u3002\n\u800c\u7528\u6237\u8fdb\u7a0b\u65e2\u62e5\u6709Kernel_Thread\u7ed3\u6784\u4f53\uff0c\u4e5f\u62e5\u6709User_Context \u7ed3\u6784\u4f53\u3002User_Context \u7ed3\u6784\u4f53\u4fdd\u5b58\u4e86\u7528\u6237\u6808\u5730\u5740\u3001\u6bb5\u63cf\u8ff0\u7b26\u3001\u6bb5\u9009\u62e9\u5b50\u3001\u7528\u6237\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\u7b49\u5185\u5bb9\u3002\u6808\u7a7a\u95f4\u4e0d\u540c\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u6808\uff0c\u5185\u6838\u8fdb\u7a0b\u67091\u4e2a\u6808\uff0c\u5185\u6838\u6808\uff1b\u7528\u6237\u6709\u4e24\u4e2a\u6808\u7a7a\u95f4\uff0c\u5185\u6838\u6808\u548c\u7528\u6237\u6808\u7a7a\u95f4\u3002\u7528\u6237\u6808\u7684\u7a7a\u95f4\u6307\u5411\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff0c\u5185\u6838\u6808\u7684\u7a7a\u95f4\u6307\u5411\u5185\u6838\u5730\u5740\u7a7a\u95f4\u3002\u5f53\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u8fd0\u884c\uff08Ring3\uff09\u65f6\uff0cCPU\u6808\u6307\u9488\u5bc4\u5b58\u5668\u6307\u5411\u7684 \u7528\u6237\u6808\u5730\u5740\uff0c\u4f7f\u7528\u7528\u6237\u6808\u3002\u5f53\u8fdb\u7a0b\u8fd0\u884c\u5728\u5185\u6838\u6001\u65f6\uff08Ring0\uff09\uff0cCPU\u6808\u6307\u9488\u5bc4\u5b58\u5668\u6307\u5411\u7684\u662f\u5185\u6838\u6808\u7a7a\u95f4\u5730\u5740\uff0c\u4f7f\u7528\u7684\u662f\u5185\u6838\u6808\u3002\u5176\u4e2d\u7528\u6237\u6808\u5730\u5740\u4fdd\u5b58\u5728User_Context\u7ed3\u6784\u4f53\u4e2d\uff0c\u5185\u6838\u6808\u5730\u5740\u4fdd\u5b58\u5728Kernel_Thread\u7ed3\u6784\u4f53\u4e2d\u3002"))),(0,a.kt)("li",{parentName:"ol"},"\u4ec0\u4e48\u662f\u5168\u5c40\u63cf\u8ff0\u8868\uff1f\u4ec0\u4e48\u662f\u5c40\u90e8\u63cf\u8ff0\u8868\uff1f"),(0,a.kt)("li",{parentName:"ol"},"\u5728GeekOS\u7cfb\u7edf\u5185\u6838\u4e2d\uff0c\u5982\u4f55\u7531ELF\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u7ea7\u7ebf\u7a0b\uff1f"),(0,a.kt)("li",{parentName:"ol"},"\u5728GeekOS\u7cfb\u7edf\u5185\u6838\u4e2d\uff0c\u5982\u4f55\u9009\u62e9\u4e00\u4e2a\u5efa\u7acb\u597d\u7684\u7528\u6237\u7ea7\u7ebf\u7a0b\u6765\u8fd0\u884c\uff1f")),(0,a.kt)("h2",{id:"\u53c2\u8003\u4e0e\u81f4\u8c22"},"\u53c2\u8003\u4e0e\u81f4\u8c22"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://blog.csdn.net/qq_35008279/article/details/79648917"},"GeekOS\u8bfe\u7a0b\u8bbe\u8ba1-project2_geekos"))))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(n),d=s,m=p["".concat(c,".").concat(d)]||p[d]||_[d]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:s,o[1]=l;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53027:function(e,t,n){t.Z=n.p+"assets/images/image-20230427095203-46fa79336efa1d6706722549eba0fc22.png"},98391:function(e,t,n){t.Z=n.p+"assets/images/image-20230427095309-3c9a22596fec3c01efa8d9bd1f78ed0c.png"},84540:function(e,t,n){t.Z=n.p+"assets/images/image-20230427095636-ee40ff3729f15123101e40312d986f7d.png"},28542:function(e,t,n){t.Z=n.p+"assets/images/image-20230427095714-6888ff6c565b21a17d4dc0977bc45d4c.png"},77142:function(e,t,n){t.Z=n.p+"assets/images/image-20230427110324-8f4269fa3f8716df8bbaab2789de9345.png"}}]);